{
 "etype": "OperationalError",
 "evalue": "OperationalError(2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")",
 "exception": {
  "args": [
   40,
   50,
   48,
   48,
   51,
   44,
   32,
   34,
   67,
   97,
   110,
   39,
   116,
   32,
   99,
   111,
   110,
   110,
   101,
   99,
   116,
   32,
   116,
   111,
   32,
   77,
   121,
   83,
   81,
   76,
   32,
   115,
   101,
   114,
   118,
   101,
   114,
   32,
   111,
   110,
   32,
   39,
   49,
   50,
   55,
   46,
   48,
   46,
   48,
   46,
   49,
   39,
   32,
   40,
   91,
   69,
   114,
   114,
   110,
   111,
   32,
   49,
   49,
   49,
   93,
   32,
   67,
   111,
   110,
   110,
   101,
   99,
   116,
   105,
   111,
   110,
   32,
   114,
   101,
   102,
   117,
   115,
   101,
   100,
   41,
   34,
   41
  ],
  "errno": [
   52,
   48,
   56,
   52
  ],
  "original_exception": [
   67,
   111,
   110,
   110,
   101,
   99,
   116,
   105,
   111,
   110,
   82,
   101,
   102,
   117,
   115,
   101,
   100,
   69,
   114,
   114,
   111,
   114,
   40,
   49,
   49,
   49,
   44,
   32,
   39,
   67,
   111,
   110,
   110,
   101,
   99,
   116,
   105,
   111,
   110,
   32,
   114,
   101,
   102,
   117,
   115,
   101,
   100,
   39,
   41
  ],
  "traceback": [
   39,
   84,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   40,
   109,
   111,
   115,
   116,
   32,
   114,
   101,
   99,
   101,
   110,
   116,
   32,
   99,
   97,
   108,
   108,
   32,
   108,
   97,
   115,
   116,
   41,
   58,
   92,
   110,
   32,
   32,
   70,
   105,
   108,
   101,
   32,
   34,
   47,
   104,
   111,
   109,
   101,
   46,
   46,
   46,
   116,
   105,
   111,
   110,
   82,
   101,
   102,
   117,
   115,
   101,
   100,
   69,
   114,
   114,
   111,
   114,
   58,
   32,
   91,
   69,
   114,
   114,
   110,
   111,
   32,
   49,
   49,
   49,
   93,
   32,
   67,
   111,
   110,
   110,
   101,
   99,
   116,
   105,
   111,
   110,
   32,
   114,
   101,
   102,
   117,
   115,
   101,
   100,
   92,
   110,
   39
  ],
  "with_traceback": [
   60,
   98,
   117,
   105,
   108,
   116,
   45,
   105,
   110,
   32,
   109,
   101,
   116,
   104,
   111,
   100,
   32,
   119,
   105,
   116,
   104,
   95,
   116,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   111,
   102,
   32,
   79,
   112,
   101,
   114,
   97,
   116,
   105,
   111,
   110,
   97,
   108,
   69,
   114,
   114,
   111,
   114,
   32,
   111,
   98,
   106,
   101,
   99,
   116,
   62
  ]
 },
 "frames": [
  {
   "call": "(request=<Request 'http://135.181.253.95/' [GET]>)",
   "dump": {
    "global get_response": "<function get_response>",
    "response": "None"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "101": "",
    "102": "\t\telif request.method in (\"GET\", \"HEAD\", \"POST\"):",
    "103": "\t\t\tresponse = get_response()",
    "104": "",
    "105": "\t\telse:"
   },
   "lnum": 103
  },
  {
   "call": "(path='/', http_status_code=200)",
   "dump": {
    "e": "undefined",
    "exception": "undefined",
    "global ErrorPage": "<class 'frappe.website.page_renderers.error_page.ErrorPage'>",
    "response": "None"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/website/serve.py",
   "func": "get_response",
   "lines": {
    "24": "\t\tresponse = NotFoundPage(endpoint, http_status_code).render()",
    "25": "\texcept Exception as e:",
    "26": "\t\tresponse = ErrorPage(exception=e).render()",
    "27": "",
    "28": "\treturn response"
   },
   "lnum": 26
  },
  {
   "call": "(self=<frappe.website.page_renderers.error_page.ErrorPage object>)",
   "dump": {
    "html": "undefined",
    "self": "<frappe.website.page_renderers.error_page.ErrorPage object>",
    "self. get_html": "<bound method TemplatePage.get_html of <frappe.website.page_renderers.error_page.ErrorPage object>>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/website/page_renderers/template_page.py",
   "func": "render",
   "lines": {
    "82": "",
    "83": "\tdef render(self):",
    "84": "\t\thtml = self.get_html()",
    "85": "\t\thtml = self.add_csrf_token(html)",
    "86": "\t\treturn self.build_response(html)"
   },
   "lnum": 84
  },
  {
   "call": "(*args=(<frappe.website.page_renderers.error_page.ErrorPage object>,), **kwargs={})",
   "dump": {
    "args": "(<frappe.website.page_renderers.error_page.ErrorPage object>,)",
    "func": "<function TemplatePage.get_html>",
    "html": "undefined",
    "kwargs": "{}"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/website/utils.py",
   "func": "cache_html_decorator",
   "lines": {
    "515": "\t\t\t\tfrappe.local.response.from_cache = True",
    "516": "\t\t\t\treturn html",
    "517": "\t\thtml = func(*args, **kwargs)",
    "518": "\t\tcontext = args[0].context",
    "519": "\t\tif can_cache(context.no_cache):"
   },
   "lnum": 517
  },
  {
   "call": "(self=<frappe.website.page_renderers.error_page.ErrorPage object>)",
   "dump": {
    "self": "<frappe.website.page_renderers.error_page.ErrorPage object>",
    "self. init_context": "<bound method ErrorPage.init_context of <frappe.website.page_renderers.error_page.ErrorPage object>>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/website/page_renderers/template_page.py",
   "func": "get_html",
   "lines": {
    "90": "\t\t# context object should be separate from self for security",
    "91": "\t\t# because it will be accessed via the user defined template",
    "92": "\t\tself.init_context()",
    "93": "",
    "94": "\t\tself.set_pymodule()"
   },
   "lnum": 92
  },
  {
   "call": "(self=<frappe.website.page_renderers.error_page.ErrorPage object>)",
   "dump": {
    ").init_context": "undefined",
    "builtin super": "<class 'super'>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/website/page_renderers/error_page.py",
   "func": "init_context",
   "lines": {
    "12": "",
    "13": "\tdef init_context(self):",
    "14": "\t\tsuper().init_context()",
    "15": "\t\tself.context.http_status_code = getattr(self.exception, \"http_status_code\", None) or 500",
    "16": "\t\tself.context.error_title = getattr(self.exception, \"title\", None)"
   },
   "lnum": 14
  },
  {
   "call": "(self=<frappe.website.page_renderers.error_page.ErrorPage object>)",
   "dump": {
    "global get_website_settings": "<function get_website_settings>",
    "self": "<frappe.website.page_renderers.error_page.ErrorPage object>",
    "self. context": "{}",
    "self.context. update": "<bound method _dict.update of {}>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/website/page_renderers/base_template_page.py",
   "func": "init_context",
   "lines": {
    "13": "\tdef init_context(self):",
    "14": "\t\tself.context = frappe._dict()",
    "15": "\t\tself.context.update(get_website_settings())",
    "16": "\t\tself.context.update(frappe.local.conf.get(\"website_context\") or {})",
    "17": ""
   },
   "lnum": 15
  },
  {
   "call": "(context={'top_bar_items': [<TopBarItem: d928608143 paren...ndard>, 'hide_login': 0, 'read_only_mode': False})",
   "dump": {
    "context": "{'top_bar_items': [<TopBarItem: d928608143 paren...ndard>, 'hide_login': 0, 'read_only_mode': False}",
    "context. boot": "None",
    "global get_boot_data": "<function get_boot_data>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/website/doctype/website_settings/website_settings.py",
   "func": "get_website_settings",
   "lines": {
    "206": "",
    "207": "\tcontext.read_only_mode = frappe.flags.read_only",
    "208": "\tcontext.boot = get_boot_data()",
    "209": "",
    "210": "\treturn context"
   },
   "lnum": 208
  },
  {
   "call": "()",
   "dump": {
    "frappe. db": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "frappe. session": "{'data': {'user': 'Guest'}, 'user': 'Guest', 'sid': 'Guest'}",
    "frappe.db. get_value": "<bound method Database.get_value of <frappe.database.mariadb.database.MariaDBDatabase object>>",
    "frappe.session. user": "'Guest'",
    "global frappe": "<module 'frappe' from '/home/erpgulf/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "global get_system_timezone": "<function get_system_timezone>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/website/utils.py",
   "func": "get_boot_data",
   "lines": {
    "168": "\t\t\"time_zone\": {",
    "169": "\t\t\t\"system\": get_system_timezone(),",
    "170": "\t\t\t\"user\": frappe.db.get_value(\"User\", frappe.session.user, \"time_zone\") or get_system_timezone(),",
    "171": "\t\t},",
    "172": "\t}"
   },
   "lnum": 170
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, doctype='User', filters='Guest', fieldname='time_zone', ignore=None, as_dict=False, debug=False, order_by='KEEP_DEFAULT_ORDERING', cache=False, for_update=False, run=True, pluck=False, distinct=False)",
   "dump": {
    "as_dict": "False",
    "cache": "False",
    "debug": "False",
    "distinct": "False",
    "doctype": "'User'",
    "fieldname": "'time_zone'",
    "filters": "'Guest'",
    "for_update": "False",
    "ignore": "None",
    "limit": "undefined",
    "order_by": "'KEEP_DEFAULT_ORDERING'",
    "pluck": "False",
    "result": "undefined",
    "run": "True",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. get_values": "<bound method Database.get_values of <frappe.database.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "get_value",
   "lines": {
    "507": "\t\t\"\"\"",
    "508": "",
    "509": "\t\tresult = self.get_values(",
    "510": "\t\t\tdoctype,",
    "511": "\t\t\tfilters,"
   },
   "lnum": 509
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, doctype='User', filters='Guest', fieldname='time_zone', ignore=None, as_dict=False, debug=False, order_by='modified', update=None, cache=False, for_update=False, run=True, pluck=False, distinct=False, limit=1)",
   "dump": {
    "as_dict": "False",
    "debug": "False",
    "distinct": "False",
    "doctype": "'User'",
    "fields": "['time_zone']",
    "filters": "'Guest'",
    "for_update": "False",
    "limit": "1",
    "order_by": "'modified'",
    "out": "None",
    "pluck": "False",
    "run": "True",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. _get_values_from_table": "<bound method Database._get_values_from_table of...atabase.mariadb.database.MariaDBDatabase object>>",
    "update": "None"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "get_values",
   "lines": {
    "604": "\t\t\t\t\tif order_by:",
    "605": "\t\t\t\t\t\torder_by = \"modified\" if order_by == DefaultOrderBy else order_by",
    "606": "\t\t\t\t\tout = self._get_values_from_table(",
    "607": "\t\t\t\t\t\tfields=fields,",
    "608": "\t\t\t\t\t\tfilters=filters,"
   },
   "lnum": 606
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, fields=['time_zone'], filters='Guest', doctype='User', as_dict=False, debug=False, order_by='modified', update=None, for_update=False, run=True, pluck=False, distinct=False, limit=1)",
   "dump": {
    "as_dict": "False",
    "debug": "False",
    "pluck": "False",
    "query": "SELECT `time_zone` FROM `tabUser` WHERE `name`='Guest' ORDER BY `modified` DESC LIMIT 1",
    "query. run": "<bound method patch_query_execute.<locals>.execu... `name`='Guest' ORDER BY `modified` DESC LIMIT 1>",
    "run": "True",
    "update": "None"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "_get_values_from_table",
   "lines": {
    "833": "\t\t\tas_dict = True",
    "834": "",
    "835": "\t\treturn query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)",
    "836": "",
    "837": "\tdef _get_value_for_many_names("
   },
   "lnum": 835
  },
  {
   "call": "(query='SELECT `time_zone` FROM `tabUser` WHERE `name`=%(param1)s ORDER BY `modified` DESC LIMIT 1', *args=(), **kwargs={'as_dict': False, 'debug': False, 'pluck': False, 'run': True, 'update': None})",
   "dump": {
    "args": "()",
    "frappe. db": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "frappe.db. sql": "<bound method Database.sql of <frappe.database.mariadb.database.MariaDBDatabase object>>",
    "global frappe": "<module 'frappe' from '/home/erpgulf/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "kwargs": "{'as_dict': False, 'debug': False, 'pluck': False, 'run': True, 'update': None}",
    "params": "{'param1': 'Guest'}",
    "query": "'SELECT `time_zone` FROM `tabUser` WHERE `name`=%(param1)s ORDER BY `modified` DESC LIMIT 1'",
    "result": "undefined"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/query_builder/utils.py",
   "func": "execute_query",
   "lines": {
    "85": "\t\tchild_queries = query._child_queries if isinstance(query._child_queries, list) else []",
    "86": "\t\tquery, params = prepare_query(query)",
    "87": "\t\tresult = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep",
    "88": "\t\texecute_child_queries(child_queries, result)",
    "89": "\t\treturn result"
   },
   "lnum": 87
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, query='SELECT `time_zone` FROM `tabUser` WHERE `name`=%(param1)s ORDER BY `modified` DESC LIMIT 1', values={'param1': 'Guest'}, as_dict=False, as_list=0, formatted=0, debug=False, ignore_ddl=0, as_utf8=0, auto_commit=0, update=None, explain=False, run=True, pluck=False)",
   "dump": {
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. connect": "<bound method Database.connect of <frappe.database.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "sql",
   "lines": {
    "199": "",
    "200": "\t\tif not self._conn:",
    "201": "\t\t\tself.connect()",
    "202": "",
    "203": "\t\t# in transaction validations"
   },
   "lnum": 201
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>)",
   "dump": {
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. _conn": "None",
    "self. get_connection": "<bound method MariaDBConnectionUtil.get_connecti...atabase.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "connect",
   "lines": {
    "113": "\t\t\"\"\"Connects to a database as set in `site_config.json`.\"\"\"",
    "114": "\t\tself.cur_db_name = self.user",
    "115": "\t\tself._conn = self.get_connection()",
    "116": "\t\tself._cursor = self._conn.cursor()",
    "117": "\t\tfrappe.local.rollback_observers = []"
   },
   "lnum": 115
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>)",
   "dump": {
    "conn": "undefined",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. _get_connection": "<bound method MariaDBConnectionUtil._get_connect...atabase.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py",
   "func": "get_connection",
   "lines": {
    "96": "class MariaDBConnectionUtil:",
    "97": "\tdef get_connection(self):",
    "98": "\t\tconn = self._get_connection()",
    "99": "\t\tconn.auto_reconnect = True",
    "100": "\t\treturn conn"
   },
   "lnum": 98
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>)",
   "dump": {
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. create_connection": "<bound method MariaDBConnectionUtil.create_conne...atabase.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py",
   "func": "_get_connection",
   "lines": {
    "102": "\tdef _get_connection(self):",
    "103": "\t\t\"\"\"Return MariaDB connection object.\"\"\"",
    "104": "\t\treturn self.create_connection()",
    "105": "",
    "106": "\tdef create_connection(self):"
   },
   "lnum": 104
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>)",
   "dump": {
    "global pymysql": "<module 'pymysql' from '/home/erpgulf/frappe-ben...ib/python3.10/site-packages/pymysql/__init__.py'>",
    "pymysql. connect": "<class 'pymysql.connections.Connection'>",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. get_connection_settings": "<bound method MariaDBConnectionUtil.get_connecti...atabase.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py",
   "func": "create_connection",
   "lines": {
    "105": "",
    "106": "\tdef create_connection(self):",
    "107": "\t\treturn pymysql.connect(**self.get_connection_settings())",
    "108": "",
    "109": "\tdef set_execution_timeout(self, seconds: int):"
   },
   "lnum": 107
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, user='_c7e7808710c98f83', password='fQGYD63Ml6sx0RM8', host='127.0.0.1', database='_c7e7808710c98f83', unix_socket=None, port=0, charset='utf8mb4', sql_mode=None, read_default_file=None, conv={<class 'bool'>: <function escape_bool>, <class 'int'>: <function escape_int>, <class 'float'>: <function escape_float>, <class 'str'>: <function escape_str>, <class 'bytes'>: <function escape_bytes>, <class 'tuple'>: <function escape_sequence>, <class 'list'>: <function escape_sequence>, <class 'set'>: <function escape_sequence>, <class 'frozenset'>: <function escape_sequence>, <class 'dict'>: <function escape_dict>, ...}, use_unicode=True, client_flag=3842573, cursorclass=<class 'pymysql.cursors.Cursor'>, init_command=None, connect_timeout=10, read_default_group=None, autocommit=False, local_infile=False, max_allowed_packet=16777216, defer_connect=False, auth_plugin_map=None, read_timeout=None, write_timeout=None, bind_address=None, binary_prefix=False, program_name=None, server_public_key=None, ssl=None, ssl_ca=None, ssl_cert=None, ssl_disabled=None, ssl_key=None, ssl_verify_cert=None, ssl_verify_identity=None, compress=None, named_pipe=None, passwd=None, db=None)",
   "dump": {
    "self": "<pymysql.connections.Connection object>",
    "self. connect": "<bound method Connection.connect of <pymysql.connections.Connection object>>"
   },
   "file": "/home/erpgulf/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py",
   "func": "__init__",
   "lines": {
    "350": "            self._sock = None",
    "351": "        else:",
    "352": "            self.connect()",
    "353": "",
    "354": "    def __enter__(self):"
   },
   "lnum": 352
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, sock=None)",
   "dump": {
    "exc": "OperationalError(2003, \"Can't connect to MySQL s...on '127.0.0.1' ([Errno 111] Connection refused)\")"
   },
   "file": "/home/erpgulf/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py",
   "func": "connect",
   "lines": {
    "666": "                if DEBUG:",
    "667": "                    print(exc.traceback)",
    "668": "                raise exc",
    "669": "",
    "670": "            # If e is neither DatabaseError or IOError, It's a bug."
   },
   "lnum": 668
  }
 ],
 "locals": {
  "exc": "OperationalError(2003, \"Can't connect to MySQL s...on '127.0.0.1' ([Errno 111] Connection refused)\")",
  "kwargs": "{}",
  "self": "<pymysql.connections.Connection object>",
  "sock": "None"
 },
 "pyver": "Python 3.10.12: /home/erpgulf/frappe-bench/env/bin/python (prefix: /home/erpgulf/frappe-bench/env)",
 "timestamp": "2023-09-15 13:17:32.106125",
 "traceback": "Traceback (most recent call last):\n  File \"/home/erpgulf/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 616, in connect\n    sock = socket.create_connection(\n  File \"/usr/lib/python3.10/socket.py\", line 845, in create_connection\n    raise err\n  File \"/usr/lib/python3.10/socket.py\", line 833, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/serve.py\", line 17, in get_response\n    endpoint, renderer_instance = path_resolver.resolve()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/path_resolver.py\", line 36, in resolve\n    resolve_redirect(self.path, request.query_string)\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/path_resolver.py\", line 108, in resolve_redirect\n    redirects += frappe.get_all(\"Website Route Redirect\", [\"source\", \"target\"], order_by=None)\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/__init__.py\", line 1939, in get_all\n    return get_list(doctype, *args, **kwargs)\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/__init__.py\", line 1911, in get_list\n    return frappe.model.db_query.DatabaseQuery(doctype).execute(*args, **kwargs)\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/model/db_query.py\", line 196, in execute\n    result = self.build_and_run()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/model/db_query.py\", line 236, in build_and_run\n    return frappe.db.sql(\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py\", line 201, in sql\n    self.connect()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py\", line 115, in connect\n    self._conn = self.get_connection()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py\", line 98, in get_connection\n    conn = self._get_connection()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py\", line 104, in _get_connection\n    return self.create_connection()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py\", line 107, in create_connection\n    return pymysql.connect(**self.get_connection_settings())\n  File \"/home/erpgulf/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 352, in __init__\n    self.connect()\n  File \"/home/erpgulf/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 668, in connect\n    raise exc\npymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/erpgulf/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 616, in connect\n    sock = socket.create_connection(\n  File \"/usr/lib/python3.10/socket.py\", line 845, in create_connection\n    raise err\n  File \"/usr/lib/python3.10/socket.py\", line 833, in create_connection\n    sock.connect(sa)\nConnectionRefusedError: [Errno 111] Connection refused\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/app.py\", line 103, in application\n    response = get_response()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/serve.py\", line 26, in get_response\n    response = ErrorPage(exception=e).render()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/page_renderers/template_page.py\", line 84, in render\n    html = self.get_html()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/utils.py\", line 517, in cache_html_decorator\n    html = func(*args, **kwargs)\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/page_renderers/template_page.py\", line 92, in get_html\n    self.init_context()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/page_renderers/error_page.py\", line 14, in init_context\n    super().init_context()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/page_renderers/base_template_page.py\", line 15, in init_context\n    self.context.update(get_website_settings())\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/doctype/website_settings/website_settings.py\", line 208, in get_website_settings\n    context.boot = get_boot_data()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/website/utils.py\", line 170, in get_boot_data\n    \"user\": frappe.db.get_value(\"User\", frappe.session.user, \"time_zone\") or get_system_timezone(),\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py\", line 509, in get_value\n    result = self.get_values(\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py\", line 606, in get_values\n    out = self._get_values_from_table(\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py\", line 835, in _get_values_from_table\n    return query.run(as_dict=as_dict, debug=debug, update=update, run=run, pluck=pluck)\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/query_builder/utils.py\", line 87, in execute_query\n    result = frappe.db.sql(query, params, *args, **kwargs)  # nosemgrep\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py\", line 201, in sql\n    self.connect()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/database.py\", line 115, in connect\n    self._conn = self.get_connection()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py\", line 98, in get_connection\n    conn = self._get_connection()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py\", line 104, in _get_connection\n    return self.create_connection()\n  File \"/home/erpgulf/frappe-bench/apps/frappe/frappe/database/mariadb/database.py\", line 107, in create_connection\n    return pymysql.connect(**self.get_connection_settings())\n  File \"/home/erpgulf/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 352, in __init__\n    self.connect()\n  File \"/home/erpgulf/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 668, in connect\n    raise exc\npymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '127.0.0.1' ([Errno 111] Connection refused)\")\n"
}